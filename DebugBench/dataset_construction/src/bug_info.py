BUG_TYPES = {
    "python3": [
        "indentation error",
        "parentheses mismatch",
        "colon missing",
        "undefined keywords from other languages",
        "== and = confusion",
        "unclosed string",
        "wrong comment mark",
        "undefined objects",
        "undefined methods",
        "missing or wrong import",
        "indexing error",
        "logic error"
    ],
    "java": [
        "statement separation",
        "parentheses mismatch",
        "colon missing",
        "undefined keywords from other languages",
        "== and = confusion",
        "unclosed string",
        "wrong comment mark",
        "undefined objects",
        "undefined methods",
        "missing or wrong import",
        "indexing error",
        "logic error",
    ],
    "cpp": [
        "statement separation",
        "parentheses mismatch",
        "colon missing",
        "undefined keywords from other languages",
        "== and = confusion",
        "unclosed string",
        "wrong comment mark",
        "undefined objects",
        "undefined methods",
        "indexing error",
        "logic error",
    ]
}

BUG_CONDITIONS = {
    "python3": {
        "indentation error": lambda case: True,
        "parentheses mismatch": lambda case: '(' in case['oracle_code'],
        "colon missing": lambda case: ':' in case['oracle_code'],
        "undefined keywords from other languages": lambda case: True,
        "== and = confusion": lambda case: '==' in case['oracle_code'],
        "unclosed string": lambda case: ('\'' in case['oracle_code']) or ('\"' in case['oracle_code']),
        "wrong comment mark": lambda case: True,
        "undefined objects": lambda case: True,
        "undefined methods": lambda case: True,
        "missing or wrong import": lambda case: 'import' in case['oracle_code'],
        "indexing error": lambda case: '[' in case['oracle_code'],
        "logic error": lambda case: True,
    },
    "java": {
        "statement separation": lambda case: True,
        "parentheses mismatch": lambda case: '(' in case['oracle_code'],
        "colon missing": lambda case: ':' in case['oracle_code'],
        "undefined keywords from other languages": lambda case: True,
        "== and = confusion": lambda case: '==' in case['oracle_code'],
        "unclosed string": lambda case: ('\'' in case['oracle_code']) or ('\"' in case['oracle_code']),
        "wrong comment mark": lambda case: True,
        "undefined objects": lambda case: True,
        "undefined methods": lambda case: True,
        "missing or wrong import": lambda case: 'import' in case['oracle_code'],
        "indexing error": lambda case: '[' in case['oracle_code'],
        "logic error": lambda case: True,
    },
    "cpp": {
        "statement separation": lambda case: True,
        "parentheses mismatch": lambda case: '(' in case['oracle_code'],
        "colon missing": lambda case: ':' in case['oracle_code'],
        "undefined keywords from other languages": lambda case: True,
        "== and = confusion": lambda case: '==' in case['oracle_code'],
        "unclosed string": lambda case: ('\'' in case['oracle_code']) or ('\"' in case['oracle_code']),
        "wrong comment mark": lambda case: True,
        "undefined objects": lambda case: True,
        "undefined methods": lambda case: True,
        "missing or wrong headers": lambda case: 'include' in case['oracle_code'],
        "indexing error": lambda case: '[' in case['oracle_code'],
        "logic error": lambda case: True,
    }
}

BUG_NUM = {
    "statement separation": 50,
    "indentation error": 50,
    "parentheses mismatch": 50,
    "colon missing": 50,
    "undefined keywords from other languages": 50,
    "== and = confusion": 50,
    "unclosed string": 50,
    "wrong comment mark": 50,
    "undefined objects": 80,
    "undefined methods": 80,
    "missing or wrong import": 80,
    "missing or wrong headers": 80,
    "indexing error": 80,
    "logic error": 328,
}

